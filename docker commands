Docker Commands with Explanations
1. Managing Docker Images
1.1 List Images

docker images
Lists all images stored locally on your machine.

1.2 Pull an Image from Docker Hub

docker pull image_name:tag
Downloads an image from Docker Hub. Example:

docker pull nginx:latest
1.3 Build an Image from Dockerfile

docker build -t image_name:tag /path/to/context
Builds a Docker image from a Dockerfile located at the specified path.

1.4 Remove an Image

docker rmi image_name:tag
Deletes a local image. If the image is used by containers, delete those containers first.

2. Managing Containers
2.1 Run a Container

docker run [OPTIONS] image_name
Creates and starts a container from an image.

Common options:

-d: Run container in detached mode (background).
-it: Interactive mode with a terminal.
--name: Assign a name to the container.
-p: Map ports (host:container).
--env: Set environment variables.
Example:

docker run -d --name my_nginx -p 8080:80 nginx
2.2 List Running Containers

docker ps
Shows all currently running containers.

To include stopped containers:

docker ps -a
2.3 Stop a Running Container

docker stop container_name_or_id
2.4 Start a Stopped Container

docker start container_name_or_id
2.5 Remove a Container

docker rm container_name_or_id
Deletes a container; note you must stop it first.

2.6 Run a Container Interactively / Access Container Shell

docker exec -it container_name /bin/bash
Runs an interactive shell inside the running container.

3. Managing Docker Networks
3.1 List Networks

docker network ls
3.2 Create a Custom Network

docker network create network_name
3.3 Remove a Network

docker network rm network_name
3.4 Connect Container to Network

docker network connect network_name container_name
3.5 Disconnect Container from Network

docker network disconnect network_name container_name
4. Managing Docker Volumes
4.1 List Volumes

docker volume ls
4.2 Create a Volume

docker volume create volume_name
4.3 Remove a Volume

docker volume rm volume_name
4.4 Use Volume in Container

docker run -d -v volume_name:/path/in/container image_name
Maps a volume to a path within the container.

5. Logging and Monitoring
5.1 Fetch Container Logs

docker logs container_name
Displays logs generated by the container.

5.2 Follow Logs in Real Time

docker logs -f container_name
5.3 Show Resource Usage of Containers

docker stats
Displays real-time CPU, memory, network IO data for running containers.

6. Docker System Management
6.1 Prune Unused Data

docker system prune
Removes stopped containers, unused networks, dangling images, and build cache.

Use with caution!

6.2 Remove All Unused Containers, Networks, Images, and Build Cache

docker system prune -a
7. Docker Compose
7.1 Start Containers Defined in Compose File

docker-compose up -d
Builds, (re)creates, starts, and attaches containers according to docker-compose.yml.

7.2 Stop Containers

docker-compose down
Summary Table
Command	Purpose	Example
docker images	List images	docker images
docker pull	Download image	docker pull nginx
docker build	Build image from Dockerfile	docker build -t myapp .
docker run	Create and start container	docker run -d --name myapp nginx
docker ps	List running containers	docker ps
docker stop	Stop container	docker stop myapp
docker rm	Remove container	docker rm myapp
docker logs	Fetch logs	docker logs myapp
docker network create	Create network	docker network create mynet
docker volume create	Create volume	docker volume create myvol
